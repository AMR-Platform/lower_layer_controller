
avr_controller.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000352  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000002de  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800100  00800100  00000352  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000352  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000384  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  000003c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000fdf  00000000  00000000  0000044c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000be3  00000000  00000000  0000142b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000691  00000000  00000000  0000200e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000100  00000000  00000000  000026a0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000602  00000000  00000000  000027a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000490  00000000  00000000  00002da2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000068  00000000  00000000  00003232  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 56 00 	jmp	0xac	; 0xac <__ctors_end>
   4:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
   8:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
   c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  10:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  14:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  18:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  1c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  20:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  24:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  28:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  2c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  30:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  34:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  38:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  3c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  40:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  44:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  48:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  4c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  50:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  54:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  58:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  5c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  60:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  64:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  68:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  6c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  70:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  74:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  78:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  7c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  80:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  84:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  88:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  8c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  90:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  94:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  98:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  9c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  a0:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  a4:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  a8:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>

000000ac <__ctors_end>:
  ac:	11 24       	eor	r1, r1
  ae:	1f be       	out	0x3f, r1	; 63
  b0:	cf ef       	ldi	r28, 0xFF	; 255
  b2:	da e0       	ldi	r29, 0x0A	; 10
  b4:	de bf       	out	0x3e, r29	; 62
  b6:	cd bf       	out	0x3d, r28	; 61

000000b8 <__do_clear_bss>:
  b8:	21 e0       	ldi	r18, 0x01	; 1
  ba:	a0 e0       	ldi	r26, 0x00	; 0
  bc:	b1 e0       	ldi	r27, 0x01	; 1
  be:	01 c0       	rjmp	.+2      	; 0xc2 <.do_clear_bss_start>

000000c0 <.do_clear_bss_loop>:
  c0:	1d 92       	st	X+, r1

000000c2 <.do_clear_bss_start>:
  c2:	a2 30       	cpi	r26, 0x02	; 2
  c4:	b2 07       	cpc	r27, r18
  c6:	e1 f7       	brne	.-8      	; 0xc0 <.do_clear_bss_loop>
  c8:	0e 94 6a 00 	call	0xd4	; 0xd4 <main>
  cc:	0c 94 6d 01 	jmp	0x2da	; 0x2da <_exit>

000000d0 <__bad_interrupt>:
  d0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000d4 <main>:
#include "config.h"
#include "motors.h"

int main(void) {
	// — initialize everything —
	motors_init();
  d4:	0e 94 87 00 	call	0x10e	; 0x10e <motors_init>

	// — quick test sequence —
	// spin both motors forward at 200 RPM for 2 s, then stop
	motors_enable_left (true);
  d8:	81 e0       	ldi	r24, 0x01	; 1
  da:	0e 94 bc 00 	call	0x178	; 0x178 <motors_enable_left>
	motors_enable_right(true);
  de:	81 e0       	ldi	r24, 0x01	; 1
  e0:	0e 94 c6 00 	call	0x18c	; 0x18c <motors_enable_right>
	motors_set_speed_left (2);
  e4:	82 e0       	ldi	r24, 0x02	; 2
  e6:	90 e0       	ldi	r25, 0x00	; 0
  e8:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <motors_set_speed_left>
	motors_set_speed_right(2);
  ec:	82 e0       	ldi	r24, 0x02	; 2
  ee:	90 e0       	ldi	r25, 0x00	; 0
  f0:	0e 94 0a 01 	call	0x214	; 0x214 <motors_set_speed_right>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  f4:	2a ea       	ldi	r18, 0xAA	; 170
  f6:	36 ee       	ldi	r19, 0xE6	; 230
  f8:	86 e9       	ldi	r24, 0x96	; 150
  fa:	91 e0       	ldi	r25, 0x01	; 1
  fc:	21 50       	subi	r18, 0x01	; 1
  fe:	30 40       	sbci	r19, 0x00	; 0
 100:	80 40       	sbci	r24, 0x00	; 0
 102:	90 40       	sbci	r25, 0x00	; 0
 104:	d9 f7       	brne	.-10     	; 0xfc <main+0x28>
 106:	00 00       	nop
	_delay_ms(10000);

	motors_stop_all();
 108:	0e 94 2b 01 	call	0x256	; 0x256 <motors_stop_all>
 10c:	ff cf       	rjmp	.-2      	; 0x10c <main+0x38>

0000010e <motors_init>:
        RIGHT_PUL_PORT |= _BV(RIGHT_PUL_BIT);  
        _delay_us(5);                        
        RIGHT_PUL_PORT &= ~_BV(RIGHT_PUL_BIT);
        _delay_us(5);                        
    }
}
 10e:	8a b1       	in	r24, 0x0a	; 10
 110:	80 68       	ori	r24, 0x80	; 128
 112:	8a b9       	out	0x0a, r24	; 10
 114:	8a b1       	in	r24, 0x0a	; 10
 116:	80 64       	ori	r24, 0x40	; 64
 118:	8a b9       	out	0x0a, r24	; 10
 11a:	87 b1       	in	r24, 0x07	; 7
 11c:	80 64       	ori	r24, 0x40	; 64
 11e:	87 b9       	out	0x07, r24	; 7
 120:	84 b1       	in	r24, 0x04	; 4
 122:	80 62       	ori	r24, 0x20	; 32
 124:	84 b9       	out	0x04, r24	; 4
 126:	84 b1       	in	r24, 0x04	; 4
 128:	80 61       	ori	r24, 0x10	; 16
 12a:	84 b9       	out	0x04, r24	; 4
 12c:	80 b3       	in	r24, 0x10	; 16
 12e:	80 68       	ori	r24, 0x80	; 128
 130:	80 bb       	out	0x10, r24	; 16
 132:	8b b1       	in	r24, 0x0b	; 11
 134:	80 68       	ori	r24, 0x80	; 128
 136:	8b b9       	out	0x0b, r24	; 11
 138:	8b b1       	in	r24, 0x0b	; 11
 13a:	80 64       	ori	r24, 0x40	; 64
 13c:	8b b9       	out	0x0b, r24	; 11
 13e:	88 b1       	in	r24, 0x08	; 8
 140:	8f 7b       	andi	r24, 0xBF	; 191
 142:	88 b9       	out	0x08, r24	; 8
 144:	85 b1       	in	r24, 0x05	; 5
 146:	80 62       	ori	r24, 0x20	; 32
 148:	85 b9       	out	0x05, r24	; 5
 14a:	85 b1       	in	r24, 0x05	; 5
 14c:	80 61       	ori	r24, 0x10	; 16
 14e:	85 b9       	out	0x05, r24	; 5
 150:	81 b3       	in	r24, 0x11	; 17
 152:	8f 77       	andi	r24, 0x7F	; 127
 154:	81 bb       	out	0x11, r24	; 17
 156:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 15a:	84 e0       	ldi	r24, 0x04	; 4
 15c:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
 160:	81 e0       	ldi	r24, 0x01	; 1
 162:	80 93 c3 00 	sts	0x00C3, r24	; 0x8000c3 <__TEXT_REGION_LENGTH__+0x7f80c3>
 166:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
 16a:	80 e4       	ldi	r24, 0x40	; 64
 16c:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
 170:	88 e0       	ldi	r24, 0x08	; 8
 172:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
 176:	08 95       	ret

00000178 <motors_enable_left>:
 178:	88 23       	and	r24, r24
 17a:	21 f0       	breq	.+8      	; 0x184 <motors_enable_left+0xc>
 17c:	88 b1       	in	r24, 0x08	; 8
 17e:	80 64       	ori	r24, 0x40	; 64
 180:	88 b9       	out	0x08, r24	; 8
 182:	08 95       	ret
 184:	88 b1       	in	r24, 0x08	; 8
 186:	8f 7b       	andi	r24, 0xBF	; 191
 188:	88 b9       	out	0x08, r24	; 8
 18a:	08 95       	ret

0000018c <motors_enable_right>:
 18c:	88 23       	and	r24, r24
 18e:	21 f0       	breq	.+8      	; 0x198 <motors_enable_right+0xc>
 190:	81 b3       	in	r24, 0x11	; 17
 192:	80 68       	ori	r24, 0x80	; 128
 194:	81 bb       	out	0x11, r24	; 17
 196:	08 95       	ret
 198:	81 b3       	in	r24, 0x11	; 17
 19a:	8f 77       	andi	r24, 0x7F	; 127
 19c:	81 bb       	out	0x11, r24	; 17
 19e:	08 95       	ret

000001a0 <motors_set_speed_left>:
 1a0:	9c 01       	movw	r18, r24
 1a2:	a8 ec       	ldi	r26, 0xC8	; 200
 1a4:	b0 e0       	ldi	r27, 0x00	; 0
 1a6:	0e 94 5e 01 	call	0x2bc	; 0x2bc <__umulhisi3>
 1aa:	2c e3       	ldi	r18, 0x3C	; 60
 1ac:	30 e0       	ldi	r19, 0x00	; 0
 1ae:	40 e0       	ldi	r20, 0x00	; 0
 1b0:	50 e0       	ldi	r21, 0x00	; 0
 1b2:	0e 94 3c 01 	call	0x278	; 0x278 <__udivmodsi4>
 1b6:	01 2e       	mov	r0, r17
 1b8:	1b e0       	ldi	r17, 0x0B	; 11
 1ba:	22 0f       	add	r18, r18
 1bc:	33 1f       	adc	r19, r19
 1be:	44 1f       	adc	r20, r20
 1c0:	55 1f       	adc	r21, r21
 1c2:	1a 95       	dec	r17
 1c4:	d1 f7       	brne	.-12     	; 0x1ba <motors_set_speed_left+0x1a>
 1c6:	10 2d       	mov	r17, r0
 1c8:	60 e0       	ldi	r22, 0x00	; 0
 1ca:	74 e2       	ldi	r23, 0x24	; 36
 1cc:	84 ef       	ldi	r24, 0xF4	; 244
 1ce:	90 e0       	ldi	r25, 0x00	; 0
 1d0:	0e 94 3c 01 	call	0x278	; 0x278 <__udivmodsi4>
 1d4:	21 50       	subi	r18, 0x01	; 1
 1d6:	31 09       	sbc	r19, r1
 1d8:	30 93 01 01 	sts	0x0101, r19	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 1dc:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <__DATA_REGION_ORIGIN__>
 1e0:	2f 3f       	cpi	r18, 0xFF	; 255
 1e2:	31 05       	cpc	r19, r1
 1e4:	39 f0       	breq	.+14     	; 0x1f4 <motors_set_speed_left+0x54>
 1e6:	30 f0       	brcs	.+12     	; 0x1f4 <motors_set_speed_left+0x54>
 1e8:	8f ef       	ldi	r24, 0xFF	; 255
 1ea:	90 e0       	ldi	r25, 0x00	; 0
 1ec:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 1f0:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 1f4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 1f8:	80 93 d1 00 	sts	0x00D1, r24	; 0x8000d1 <__TEXT_REGION_LENGTH__+0x7f80d1>
 1fc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 200:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 204:	96 95       	lsr	r25
 206:	87 95       	ror	r24
 208:	80 93 d2 00 	sts	0x00D2, r24	; 0x8000d2 <__TEXT_REGION_LENGTH__+0x7f80d2>
 20c:	88 e0       	ldi	r24, 0x08	; 8
 20e:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
 212:	08 95       	ret

00000214 <motors_set_speed_right>:
 214:	9c 01       	movw	r18, r24
 216:	a8 ec       	ldi	r26, 0xC8	; 200
 218:	b0 e0       	ldi	r27, 0x00	; 0
 21a:	0e 94 5e 01 	call	0x2bc	; 0x2bc <__umulhisi3>
 21e:	2c e3       	ldi	r18, 0x3C	; 60
 220:	30 e0       	ldi	r19, 0x00	; 0
 222:	40 e0       	ldi	r20, 0x00	; 0
 224:	50 e0       	ldi	r21, 0x00	; 0
 226:	0e 94 3c 01 	call	0x278	; 0x278 <__udivmodsi4>
 22a:	22 0f       	add	r18, r18
 22c:	33 1f       	adc	r19, r19
 22e:	44 1f       	adc	r20, r20
 230:	55 1f       	adc	r21, r21
 232:	60 e0       	ldi	r22, 0x00	; 0
 234:	74 e2       	ldi	r23, 0x24	; 36
 236:	84 ef       	ldi	r24, 0xF4	; 244
 238:	90 e0       	ldi	r25, 0x00	; 0
 23a:	0e 94 3c 01 	call	0x278	; 0x278 <__udivmodsi4>
 23e:	21 50       	subi	r18, 0x01	; 1
 240:	31 09       	sbc	r19, r1
 242:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 246:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
 24a:	e1 e8       	ldi	r30, 0x81	; 129
 24c:	f0 e0       	ldi	r31, 0x00	; 0
 24e:	80 81       	ld	r24, Z
 250:	81 60       	ori	r24, 0x01	; 1
 252:	80 83       	st	Z, r24
 254:	08 95       	ret

00000256 <motors_stop_all>:

void motors_stop_all(void) {
    // disable outputs
    motors_enable_left(false);
 256:	80 e0       	ldi	r24, 0x00	; 0
 258:	0e 94 bc 00 	call	0x178	; 0x178 <motors_enable_left>
    motors_enable_right(false);
 25c:	80 e0       	ldi	r24, 0x00	; 0
 25e:	0e 94 c6 00 	call	0x18c	; 0x18c <motors_enable_right>
    // stop timers
    TCCR1B &= ~(_BV(CS12)|_BV(CS11)|_BV(CS10));
 262:	e1 e8       	ldi	r30, 0x81	; 129
 264:	f0 e0       	ldi	r31, 0x00	; 0
 266:	80 81       	ld	r24, Z
 268:	88 7f       	andi	r24, 0xF8	; 248
 26a:	80 83       	st	Z, r24
    TCCR4B &= ~(_BV(CS43)|_BV(CS42)|_BV(CS41)|_BV(CS40));
 26c:	e1 ec       	ldi	r30, 0xC1	; 193
 26e:	f0 e0       	ldi	r31, 0x00	; 0
 270:	80 81       	ld	r24, Z
 272:	80 7f       	andi	r24, 0xF0	; 240
 274:	80 83       	st	Z, r24
 276:	08 95       	ret

00000278 <__udivmodsi4>:
 278:	a1 e2       	ldi	r26, 0x21	; 33
 27a:	1a 2e       	mov	r1, r26
 27c:	aa 1b       	sub	r26, r26
 27e:	bb 1b       	sub	r27, r27
 280:	fd 01       	movw	r30, r26
 282:	0d c0       	rjmp	.+26     	; 0x29e <__udivmodsi4_ep>

00000284 <__udivmodsi4_loop>:
 284:	aa 1f       	adc	r26, r26
 286:	bb 1f       	adc	r27, r27
 288:	ee 1f       	adc	r30, r30
 28a:	ff 1f       	adc	r31, r31
 28c:	a2 17       	cp	r26, r18
 28e:	b3 07       	cpc	r27, r19
 290:	e4 07       	cpc	r30, r20
 292:	f5 07       	cpc	r31, r21
 294:	20 f0       	brcs	.+8      	; 0x29e <__udivmodsi4_ep>
 296:	a2 1b       	sub	r26, r18
 298:	b3 0b       	sbc	r27, r19
 29a:	e4 0b       	sbc	r30, r20
 29c:	f5 0b       	sbc	r31, r21

0000029e <__udivmodsi4_ep>:
 29e:	66 1f       	adc	r22, r22
 2a0:	77 1f       	adc	r23, r23
 2a2:	88 1f       	adc	r24, r24
 2a4:	99 1f       	adc	r25, r25
 2a6:	1a 94       	dec	r1
 2a8:	69 f7       	brne	.-38     	; 0x284 <__udivmodsi4_loop>
 2aa:	60 95       	com	r22
 2ac:	70 95       	com	r23
 2ae:	80 95       	com	r24
 2b0:	90 95       	com	r25
 2b2:	9b 01       	movw	r18, r22
 2b4:	ac 01       	movw	r20, r24
 2b6:	bd 01       	movw	r22, r26
 2b8:	cf 01       	movw	r24, r30
 2ba:	08 95       	ret

000002bc <__umulhisi3>:
 2bc:	a2 9f       	mul	r26, r18
 2be:	b0 01       	movw	r22, r0
 2c0:	b3 9f       	mul	r27, r19
 2c2:	c0 01       	movw	r24, r0
 2c4:	a3 9f       	mul	r26, r19
 2c6:	70 0d       	add	r23, r0
 2c8:	81 1d       	adc	r24, r1
 2ca:	11 24       	eor	r1, r1
 2cc:	91 1d       	adc	r25, r1
 2ce:	b2 9f       	mul	r27, r18
 2d0:	70 0d       	add	r23, r0
 2d2:	81 1d       	adc	r24, r1
 2d4:	11 24       	eor	r1, r1
 2d6:	91 1d       	adc	r25, r1
 2d8:	08 95       	ret

000002da <_exit>:
 2da:	f8 94       	cli

000002dc <__stop_program>:
 2dc:	ff cf       	rjmp	.-2      	; 0x2dc <__stop_program>
