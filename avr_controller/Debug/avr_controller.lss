
avr_controller.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000002e4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000290  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000002e4  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000314  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000088  00000000  00000000  00000354  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000fdb  00000000  00000000  000003dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000bd4  00000000  00000000  000013b7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000066c  00000000  00000000  00001f8b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000100  00000000  00000000  000025f8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000602  00000000  00000000  000026f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000490  00000000  00000000  00002cfa  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000068  00000000  00000000  0000318a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 56 00 	jmp	0xac	; 0xac <__ctors_end>
   4:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
   8:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
   c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  10:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  14:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  18:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  1c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  20:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  24:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  28:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  2c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  30:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  34:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  38:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  3c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  40:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  44:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  48:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  4c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  50:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  54:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  58:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  5c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  60:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  64:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  68:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  6c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  70:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  74:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  78:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  7c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  80:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  84:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  88:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  8c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  90:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  94:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  98:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  9c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  a0:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  a4:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  a8:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>

000000ac <__ctors_end>:
  ac:	11 24       	eor	r1, r1
  ae:	1f be       	out	0x3f, r1	; 63
  b0:	cf ef       	ldi	r28, 0xFF	; 255
  b2:	da e0       	ldi	r29, 0x0A	; 10
  b4:	de bf       	out	0x3e, r29	; 62
  b6:	cd bf       	out	0x3d, r28	; 61
  b8:	0e 94 62 00 	call	0xc4	; 0xc4 <main>
  bc:	0c 94 46 01 	jmp	0x28c	; 0x28c <_exit>

000000c0 <__bad_interrupt>:
  c0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000c4 <main>:
#include "config.h"
#include "motors.h"

int main(void) {
	// — initialize everything —
	motors_init();
  c4:	0e 94 7f 00 	call	0xfe	; 0xfe <motors_init>

	// — quick test sequence —
	// spin both motors forward at 200 RPM for 2 s, then stop
	motors_enable_left (true);
  c8:	81 e0       	ldi	r24, 0x01	; 1
  ca:	0e 94 b0 00 	call	0x160	; 0x160 <motors_enable_left>
	motors_enable_right(true);
  ce:	81 e0       	ldi	r24, 0x01	; 1
  d0:	0e 94 ba 00 	call	0x174	; 0x174 <motors_enable_right>
	motors_set_speed_left (200);
  d4:	88 ec       	ldi	r24, 0xC8	; 200
  d6:	90 e0       	ldi	r25, 0x00	; 0
  d8:	0e 94 c4 00 	call	0x188	; 0x188 <motors_set_speed_left>
	motors_set_speed_right(200);
  dc:	88 ec       	ldi	r24, 0xC8	; 200
  de:	90 e0       	ldi	r25, 0x00	; 0
  e0:	0e 94 e5 00 	call	0x1ca	; 0x1ca <motors_set_speed_right>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  e4:	2a ea       	ldi	r18, 0xAA	; 170
  e6:	36 ee       	ldi	r19, 0xE6	; 230
  e8:	86 e9       	ldi	r24, 0x96	; 150
  ea:	91 e0       	ldi	r25, 0x01	; 1
  ec:	21 50       	subi	r18, 0x01	; 1
  ee:	30 40       	sbci	r19, 0x00	; 0
  f0:	80 40       	sbci	r24, 0x00	; 0
  f2:	90 40       	sbci	r25, 0x00	; 0
  f4:	d9 f7       	brne	.-10     	; 0xec <main+0x28>
  f6:	00 00       	nop
	_delay_ms(10000);

	motors_stop_all();
  f8:	0e 94 04 01 	call	0x208	; 0x208 <motors_stop_all>
  fc:	ff cf       	rjmp	.-2      	; 0xfc <main+0x38>

000000fe <motors_init>:
		RIGHT_PUL_PORT |=  _BV(RIGHT_PUL_BIT);
		_delay_us(5);
		RIGHT_PUL_PORT &= ~_BV(RIGHT_PUL_BIT);
		_delay_us(5);
	}
}
  fe:	84 b1       	in	r24, 0x04	; 4
 100:	80 62       	ori	r24, 0x20	; 32
 102:	84 b9       	out	0x04, r24	; 4
 104:	84 b1       	in	r24, 0x04	; 4
 106:	80 64       	ori	r24, 0x40	; 64
 108:	84 b9       	out	0x04, r24	; 4
 10a:	8d b1       	in	r24, 0x0d	; 13
 10c:	80 64       	ori	r24, 0x40	; 64
 10e:	8d b9       	out	0x0d, r24	; 13
 110:	8a b1       	in	r24, 0x0a	; 10
 112:	80 68       	ori	r24, 0x80	; 128
 114:	8a b9       	out	0x0a, r24	; 10
 116:	8d b1       	in	r24, 0x0d	; 13
 118:	84 60       	ori	r24, 0x04	; 4
 11a:	8d b9       	out	0x0d, r24	; 13
 11c:	8a b1       	in	r24, 0x0a	; 10
 11e:	80 61       	ori	r24, 0x10	; 16
 120:	8a b9       	out	0x0a, r24	; 10
 122:	85 b1       	in	r24, 0x05	; 5
 124:	8f 7d       	andi	r24, 0xDF	; 223
 126:	85 b9       	out	0x05, r24	; 5
 128:	85 b1       	in	r24, 0x05	; 5
 12a:	8f 7b       	andi	r24, 0xBF	; 191
 12c:	85 b9       	out	0x05, r24	; 5
 12e:	8e b1       	in	r24, 0x0e	; 14
 130:	80 64       	ori	r24, 0x40	; 64
 132:	8e b9       	out	0x0e, r24	; 14
 134:	8b b1       	in	r24, 0x0b	; 11
 136:	8f 77       	andi	r24, 0x7F	; 127
 138:	8b b9       	out	0x0b, r24	; 11
 13a:	8e b1       	in	r24, 0x0e	; 14
 13c:	8b 7f       	andi	r24, 0xFB	; 251
 13e:	8e b9       	out	0x0e, r24	; 14
 140:	8b b1       	in	r24, 0x0b	; 11
 142:	80 61       	ori	r24, 0x10	; 16
 144:	8b b9       	out	0x0b, r24	; 11
 146:	80 e4       	ldi	r24, 0x40	; 64
 148:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
 14c:	88 e0       	ldi	r24, 0x08	; 8
 14e:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
 152:	84 e0       	ldi	r24, 0x04	; 4
 154:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 158:	82 e0       	ldi	r24, 0x02	; 2
 15a:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
 15e:	08 95       	ret

00000160 <motors_enable_left>:
 160:	88 23       	and	r24, r24
 162:	21 f0       	breq	.+8      	; 0x16c <motors_enable_left+0xc>
 164:	8e b1       	in	r24, 0x0e	; 14
 166:	8f 7b       	andi	r24, 0xBF	; 191
 168:	8e b9       	out	0x0e, r24	; 14
 16a:	08 95       	ret
 16c:	8e b1       	in	r24, 0x0e	; 14
 16e:	80 64       	ori	r24, 0x40	; 64
 170:	8e b9       	out	0x0e, r24	; 14
 172:	08 95       	ret

00000174 <motors_enable_right>:
 174:	88 23       	and	r24, r24
 176:	21 f0       	breq	.+8      	; 0x180 <motors_enable_right+0xc>
 178:	8b b1       	in	r24, 0x0b	; 11
 17a:	8f 7e       	andi	r24, 0xEF	; 239
 17c:	8b b9       	out	0x0b, r24	; 11
 17e:	08 95       	ret
 180:	8b b1       	in	r24, 0x0b	; 11
 182:	80 61       	ori	r24, 0x10	; 16
 184:	8b b9       	out	0x0b, r24	; 11
 186:	08 95       	ret

00000188 <motors_set_speed_left>:
 188:	9c 01       	movw	r18, r24
 18a:	a8 ec       	ldi	r26, 0xC8	; 200
 18c:	b0 e0       	ldi	r27, 0x00	; 0
 18e:	0e 94 37 01 	call	0x26e	; 0x26e <__umulhisi3>
 192:	2c e3       	ldi	r18, 0x3C	; 60
 194:	30 e0       	ldi	r19, 0x00	; 0
 196:	40 e0       	ldi	r20, 0x00	; 0
 198:	50 e0       	ldi	r21, 0x00	; 0
 19a:	0e 94 15 01 	call	0x22a	; 0x22a <__udivmodsi4>
 19e:	22 0f       	add	r18, r18
 1a0:	33 1f       	adc	r19, r19
 1a2:	44 1f       	adc	r20, r20
 1a4:	55 1f       	adc	r21, r21
 1a6:	60 e0       	ldi	r22, 0x00	; 0
 1a8:	74 e2       	ldi	r23, 0x24	; 36
 1aa:	84 ef       	ldi	r24, 0xF4	; 244
 1ac:	90 e0       	ldi	r25, 0x00	; 0
 1ae:	0e 94 15 01 	call	0x22a	; 0x22a <__udivmodsi4>
 1b2:	21 50       	subi	r18, 0x01	; 1
 1b4:	31 09       	sbc	r19, r1
 1b6:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 1ba:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
 1be:	e1 e8       	ldi	r30, 0x81	; 129
 1c0:	f0 e0       	ldi	r31, 0x00	; 0
 1c2:	80 81       	ld	r24, Z
 1c4:	81 60       	ori	r24, 0x01	; 1
 1c6:	80 83       	st	Z, r24
 1c8:	08 95       	ret

000001ca <motors_set_speed_right>:
 1ca:	9c 01       	movw	r18, r24
 1cc:	a8 ec       	ldi	r26, 0xC8	; 200
 1ce:	b0 e0       	ldi	r27, 0x00	; 0
 1d0:	0e 94 37 01 	call	0x26e	; 0x26e <__umulhisi3>
 1d4:	2c e3       	ldi	r18, 0x3C	; 60
 1d6:	30 e0       	ldi	r19, 0x00	; 0
 1d8:	40 e0       	ldi	r20, 0x00	; 0
 1da:	50 e0       	ldi	r21, 0x00	; 0
 1dc:	0e 94 15 01 	call	0x22a	; 0x22a <__udivmodsi4>
 1e0:	22 0f       	add	r18, r18
 1e2:	33 1f       	adc	r19, r19
 1e4:	44 1f       	adc	r20, r20
 1e6:	55 1f       	adc	r21, r21
 1e8:	60 e0       	ldi	r22, 0x00	; 0
 1ea:	74 e2       	ldi	r23, 0x24	; 36
 1ec:	84 ef       	ldi	r24, 0xF4	; 244
 1ee:	90 e0       	ldi	r25, 0x00	; 0
 1f0:	0e 94 15 01 	call	0x22a	; 0x22a <__udivmodsi4>
 1f4:	21 50       	subi	r18, 0x01	; 1
 1f6:	31 09       	sbc	r19, r1
 1f8:	20 93 d2 00 	sts	0x00D2, r18	; 0x8000d2 <__TEXT_REGION_LENGTH__+0x7f80d2>
 1fc:	e1 ec       	ldi	r30, 0xC1	; 193
 1fe:	f0 e0       	ldi	r31, 0x00	; 0
 200:	80 81       	ld	r24, Z
 202:	81 60       	ori	r24, 0x01	; 1
 204:	80 83       	st	Z, r24
 206:	08 95       	ret

00000208 <motors_stop_all>:

void motors_stop_all(void) {
	// disable outputs
	motors_enable_left (false);
 208:	80 e0       	ldi	r24, 0x00	; 0
 20a:	0e 94 b0 00 	call	0x160	; 0x160 <motors_enable_left>
	motors_enable_right(false);
 20e:	80 e0       	ldi	r24, 0x00	; 0
 210:	0e 94 ba 00 	call	0x174	; 0x174 <motors_enable_right>
	// stop timers
	TCCR1B &= ~(_BV(CS12)|_BV(CS11)|_BV(CS10));
 214:	e1 e8       	ldi	r30, 0x81	; 129
 216:	f0 e0       	ldi	r31, 0x00	; 0
 218:	80 81       	ld	r24, Z
 21a:	88 7f       	andi	r24, 0xF8	; 248
 21c:	80 83       	st	Z, r24
	TCCR4B &= ~(_BV(CS42)|_BV(CS41)|_BV(CS40));
 21e:	e1 ec       	ldi	r30, 0xC1	; 193
 220:	f0 e0       	ldi	r31, 0x00	; 0
 222:	80 81       	ld	r24, Z
 224:	88 7f       	andi	r24, 0xF8	; 248
 226:	80 83       	st	Z, r24
 228:	08 95       	ret

0000022a <__udivmodsi4>:
 22a:	a1 e2       	ldi	r26, 0x21	; 33
 22c:	1a 2e       	mov	r1, r26
 22e:	aa 1b       	sub	r26, r26
 230:	bb 1b       	sub	r27, r27
 232:	fd 01       	movw	r30, r26
 234:	0d c0       	rjmp	.+26     	; 0x250 <__udivmodsi4_ep>

00000236 <__udivmodsi4_loop>:
 236:	aa 1f       	adc	r26, r26
 238:	bb 1f       	adc	r27, r27
 23a:	ee 1f       	adc	r30, r30
 23c:	ff 1f       	adc	r31, r31
 23e:	a2 17       	cp	r26, r18
 240:	b3 07       	cpc	r27, r19
 242:	e4 07       	cpc	r30, r20
 244:	f5 07       	cpc	r31, r21
 246:	20 f0       	brcs	.+8      	; 0x250 <__udivmodsi4_ep>
 248:	a2 1b       	sub	r26, r18
 24a:	b3 0b       	sbc	r27, r19
 24c:	e4 0b       	sbc	r30, r20
 24e:	f5 0b       	sbc	r31, r21

00000250 <__udivmodsi4_ep>:
 250:	66 1f       	adc	r22, r22
 252:	77 1f       	adc	r23, r23
 254:	88 1f       	adc	r24, r24
 256:	99 1f       	adc	r25, r25
 258:	1a 94       	dec	r1
 25a:	69 f7       	brne	.-38     	; 0x236 <__udivmodsi4_loop>
 25c:	60 95       	com	r22
 25e:	70 95       	com	r23
 260:	80 95       	com	r24
 262:	90 95       	com	r25
 264:	9b 01       	movw	r18, r22
 266:	ac 01       	movw	r20, r24
 268:	bd 01       	movw	r22, r26
 26a:	cf 01       	movw	r24, r30
 26c:	08 95       	ret

0000026e <__umulhisi3>:
 26e:	a2 9f       	mul	r26, r18
 270:	b0 01       	movw	r22, r0
 272:	b3 9f       	mul	r27, r19
 274:	c0 01       	movw	r24, r0
 276:	a3 9f       	mul	r26, r19
 278:	70 0d       	add	r23, r0
 27a:	81 1d       	adc	r24, r1
 27c:	11 24       	eor	r1, r1
 27e:	91 1d       	adc	r25, r1
 280:	b2 9f       	mul	r27, r18
 282:	70 0d       	add	r23, r0
 284:	81 1d       	adc	r24, r1
 286:	11 24       	eor	r1, r1
 288:	91 1d       	adc	r25, r1
 28a:	08 95       	ret

0000028c <_exit>:
 28c:	f8 94       	cli

0000028e <__stop_program>:
 28e:	ff cf       	rjmp	.-2      	; 0x28e <__stop_program>
